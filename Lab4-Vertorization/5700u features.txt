MMX:

Расширение MMX включает в себя восемь 64-битных 		регистров общего пользования MM0—MM7. Команды технологии MMX обрабатывают целочисленные данные, упакованные в группы (векторы) общей длиной 64 бита, либо одиночные 64-битные слова. Такие данные могут находиться в памяти или в восьми MMX-регистрах.

Команды технологии MMX работают со следующими типами данных:

упакованные байты (восемь байтов в одном 64-разрядном регистре) (англ. packed byte);
упакованные слова (четыре 16-разрядных слова в 64-разрядном регистре) (англ. packed word);
упакованные двойные слова (два 32-разрядных слова в 64-разрядном регистре) (англ. packed doubleword);
64-разрядные слова (англ. quadword).

МИНУСЫ: Нельзя использовать одновременно с сопроцессором, работает только с целыми числами

SSE:

8 (в x86-64 — 16) 128-битных регистров XMM.
32-битный (в x86-64 — 64) регистр флагов (MXCSR).
128-битный упакованный тип данных с плавающей точкой одинарной точности.
Инструкции над вещественными числами одинарной точности.
Инструкции явной предвыборки данных, контроля кэширования данных и контроля порядка операций сохранения.

В SSE добавлены восемь (шестнадцать для x64) 128-битных регистров, которые называются xmm0 — xmm7 (-xmm15).

SSE2: Как SSE, но больше комманд

SSE2 использует восемь 128-битных регистров (xmm0 до xmm7), включённых в архитектуру x86 с вводом расширения SSE, каждый из которых трактуется как 2 последовательных значения с плавающей точкой двойной точности.
SSE2 включает в себя набор инструкций, который производит операции со скалярными и упакованными типами данных.
SSE2 содержит инструкции для потоковой обработки целочисленных данных в тех же 128-битных xmm регистрах, что делает это расширение более предпочтительным для целочисленных вычислений, нежели использование набора инструкций MMX, появившегося гораздо раньше.
Продолжение SSE работает с вещественными числами.
SSE2 включает в себя ряд команд управления кэшем, предназначенных для минимизации заполнения кэша при обработке объёмных потоков данных.
SSE2 включает в себя сложные дополнения к командам преобразования чисел.


SSE3:
Наиболее заметное изменение — возможность горизонтальной работы с регистрами. Если говорить более конкретно, добавлены команды сложения и вычитания нескольких значений, хранящихся в одном регистре. Эти команды упростили ряд DSP- и 3D-операций. Существует также новая команда для преобразования значений с плавающей точкой в целые без необходимости вносить изменения в глобальном режиме округления.

SSE4:

SSE4 состоит из 54 инструкций, 47 из них относят к SSE4.1 (они есть в процессорах Penryn). Полный набор команд (SSE4.1 и SSE4.2, то есть 47 + оставшиеся 7 команд) доступен в процессорах Intel с микроархитектурой Nehalem, которые были выпущены в середине ноября 2008 года и более поздних редакциях. Ни одна из SSE4 инструкций не работает с 64-битными mmx регистрами (только со 128-битными xmm0-15).

Доп символы в sse4 определяют доп инструкции

AES: Шифрование

AVX:

Ширина векторных регистров SIMD увеличивается со 128 (XMM) до 256 бит (регистры YMM0 — YMM15). Существующие 128-битные SSE-инструкции будут использовать младшую половину новых YMM-регистров, не изменяя старшую часть. Для работы с YMM-регистрами добавлены новые 256-битные AVX-инструкции. В будущем возможно расширение векторных регистров SIMD до 512 или 1024 бит.
Неразрушающие операции. Набор AVX-инструкций использует трёхоперандный синтаксис. Например, вместо a=a+b можно использовать c=a+b, при этом регистр a остаётся неизменённым. В случаях, когда значение a используется дальше в вычислениях, это повышает производительность, так как избавляет от необходимости сохранять перед вычислением и восстанавливать после вычисления регистр, содержавший a, из другого регистра или памяти.
Для большинства новых инструкций отсутствуют требования к выравниванию операндов в памяти. Однако рекомендуется следить за выравниванием на размер операнда во избежание значительного снижения производительности.
Набор инструкций AVX содержит в себе аналоги 128-битных SSE-инструкций для вещественных чисел. При этом, в отличие от оригиналов, сохранение 128-битного результата будет обнулять старшую половину YMM-регистра. 128-битные AVX-инструкции сохраняют прочие преимущества AVX, такие как новая схема кодирования, трехоперандный синтаксис и невыровненный доступ к памяти.
Intel рекомендует отказаться от старых SSE-инструкций в пользу новых 128-битных AVX-инструкций, даже если достаточно двух операндов

AVX2: добавлены инструкции для работы с целыми числами

BMI1 and BMI2: работа с битами, не SIMD

SHA: быстрый расчет хэш суммы

F16C: ускорения преобразований между двоичными числами половинной точности (16 bit) и стандартными двоичными числами с плавающей запятой одинарной точности (32 bit). По сути, он является расширением основных 128-битных инструкций SSE.

FMA3:

набор опциональных 128- и 256-битных SIMD-инструкций для архитектур x86 и x86-64, предназначенный для выполнения операции умножения-сложения над числами в формате с плавающей запятой.

Существует два варианта расширений, добавляющих инструкции FMA:

FMA4 поддерживается процессорами AMD начиная с архитектуры Bulldozer. FMA4 было реализовано раньше FMA3, однако впоследствии AMD отказалась от поддержки данного расширения. Это стало нецелесообразным, поскольку Intel не стала внедрять в своих процессорах FMA4.
FMA3 поддерживается процессорами Intel начиная с архитектуры Haswell и процессорами AMD начиная с архитектуры Piledriver.

AMD64: 64bit архитектура

EVP: Улучшенная защита от вирусов

AMD-V: Аппаратная виртуализация 

SMAP: Еще одна защита от взлома путем аппаратного контроля памяти

SMEP: ЕЩЕ одно защита от взлома

SMT: Аппаратная мультипоточность

Precision Boost 2: повышение частоты
